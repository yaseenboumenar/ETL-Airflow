name: infra

on:
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/infra.yml'
  push:
    branches: ['main']
    paths:
      - 'terraform/**'

env:
  AWS_REGION: eu-north-1
  TF_WORKING_DIR: terraform

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write                   # needed for OIDC
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::471112627120:role/gh-oidc-terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      - name: Terraform Validate & Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform validate
          terraform plan -input=false -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/tfplan

  apply:
    if: github.ref == 'refs/heads/main'
    needs: [plan]
    runs-on: ubuntu-latest
    environment: prod               # add an “environment” called prod with required reviewer(s)
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::471112627120:role/gh-oidc-terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -input=false -auto-approve