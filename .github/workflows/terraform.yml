name: Terraform

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, pysparks-ETL ]
  workflow_dispatch:                    # allow manual runs

permissions:
  id-token: write                        # required for OIDC -> AWS
  contents: read

env:
  AWS_REGION: eu-north-1
  TF_WORKING_DIR: ./terraform
  TFSTATE_BUCKET: nhs-etl-tfstate
  TFSTATE_LOCK_TABLE: nhs-etl-tfstate-lock

jobs:
  plan:
    # run on PRs and non-main pushes
    if: github.event_name != 'push' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::471112627120:role/gh-oidc-terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure tfstate backend exists (S3 + DynamoDB)
        run: |
          set -euo pipefail
          # Create S3 bucket if it doesn't exist
          if ! aws s3api head-bucket --bucket "$TFSTATE_BUCKET" 2>/dev/null; then
            aws s3api create-bucket \
              --bucket "$TFSTATE_BUCKET" \
              --region "$AWS_REGION" \
              --create-bucket-configuration LocationConstraint="$AWS_REGION"
            aws s3api put-bucket-versioning \
              --bucket "$TFSTATE_BUCKET" \
              --versioning-configuration Status=Enabled
            aws s3api put-bucket-encryption \
              --bucket "$TFSTATE_BUCKET" \
              --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
          fi
          # Create DynamoDB lock table if it doesn't exist
          aws dynamodb describe-table --table-name "$TFSTATE_LOCK_TABLE" >/dev/null 2>&1 || \
          aws dynamodb create-table \
            --table-name "$TFSTATE_LOCK_TABLE" \
            --attribute-definitions AttributeName=LockID,AttributeType=S \
            --key-schema AttributeName=LockID,KeyType=HASH \
            --billing-mode PAY_PER_REQUEST

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform init (S3 backend)
        run: |
          terraform init -input=false \
            -backend-config="bucket=$TFSTATE_BUCKET" \
            -backend-config="key=state/terraform.tfstate" \
            -backend-config="region=$AWS_REGION" \
            -backend-config="dynamodb_table=$TFSTATE_LOCK_TABLE" \
            -backend-config="encrypt=true"
        working-directory: ${{ env.TF_WORKING_DIR }}

      - run: terraform validate -no-color
        working-directory: ${{ env.TF_WORKING_DIR }}

      - run: terraform plan -input=false -out=tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}

  apply:
    # only on push to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::471112627120:role/gh-oidc-terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure tfstate backend exists (S3 + DynamoDB)
        run: |
          set -euo pipefail
          if ! aws s3api head-bucket --bucket "$TFSTATE_BUCKET" 2>/dev/null; then
            aws s3api create-bucket \
              --bucket "$TFSTATE_BUCKET" \
              --region "$AWS_REGION" \
              --create-bucket-configuration LocationConstraint="$AWS_REGION"
            aws s3api put-bucket-versioning \
              --bucket "$TFSTATE_BUCKET" \
              --versioning-configuration Status=Enabled
            aws s3api put-bucket-encryption \
              --bucket "$TFSTATE_BUCKET" \
              --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
          fi
          aws dynamodb describe-table --table-name "$TFSTATE_LOCK_TABLE" >/dev/null 2>&1 || \
          aws dynamodb create-table \
            --table-name "$TFSTATE_LOCK_TABLE" \
            --attribute-definitions AttributeName=LockID,AttributeType=S \
            --key-schema AttributeName=LockID,KeyType=HASH \
            --billing-mode PAY_PER_REQUEST

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform init (S3 backend)
        run: |
          terraform init -input=false \
            -backend-config="bucket=$TFSTATE_BUCKET" \
            -backend-config="key=state/terraform.tfstate" \
            -backend-config="region=$AWS_REGION" \
            -backend-config="dynamodb_table=$TFSTATE_LOCK_TABLE" \
            -backend-config="encrypt=true"
        working-directory: ${{ env.TF_WORKING_DIR }}

      - run: terraform apply -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}